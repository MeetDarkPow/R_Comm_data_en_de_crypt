setwd("~/GitHub/R_Comm_data_en_de_crypt")
old_data <- readRDS("rugs.rds")
library(sodium)
key_file <- "key.rds"
file <- "encryption.rds"
key <- keygen()
serialized_msg <- serialize(old_data, NULL)
encr <- data_encrypt(serialized_msg, key)
saveRDS(encr, "Data/encryption.rds")
saveRDS(key, key_file)
dd <- readRDS("Data/encryption.rds")
rm(list = ls())
.rs.restartR()
key <- readRDS("key.rds")
dd <- readRDS("Data/encryption.rds")
data <- unserialize(data_decrypt(dd, key))
tt <- data
rm(list = ls())
.rs.restartR()
library(sodium)
# reading key for encrypted file.
key <- readRDS("key.rds")
# decryption of the file "encryption.rds".
old_encrypted_data <- readRDS("Data/encryption.rds")
old_data <- unserialize(data_decrypt(old_encrypted_data, key))
# getting new data ///*** (FOR TESTING PURPOSE ONLY TAKING THE PREVIOUS DATASET ITSELF TO MERGE INTO THE MAIN FILE) ***\\\
new_data <- old_data
# merging old and new data
updated_data <- rbind(old_data, new_data)
# updating the stored encrypted file
updated_serialized_msg <- serialize(updated_data, NULL)
updated_encr <- data_encrypt(updated_serialized_msg, key)
saveRDS(updated_encr, "Data/encryption.rds")
# decryption of the file "encryption.rds".
old_encrypted_data <- readRDS("Data/encryption.rds")
old_data <- unserialize(data_decrypt(old_encrypted_data, key))
old_data <- readRDS("rugs.rds")
serialized_msg <- serialize(old_data, NULL)
encr <- data_encrypt(serialized_msg, key)
saveRDS(encr, "Data/encryption.rds")
rm(list = ls())
# decryption of the file "encryption.rds".
old_encrypted_data <- readRDS("Data/encryption.rds")
old_data <- unserialize(data_decrypt(old_encrypted_data, key))
# reading key for encrypted file.
key <- readRDS("key.rds")
old_data <- unserialize(data_decrypt(old_encrypted_data, key))
old_data <- readRDS("rugs.rds")
serialized_msg <- serialize(old_data, NULL)
encr <- data_encrypt(serialized_msg, key)
saveRDS(encr, "Data/encryption.rds")
# decryption of the file "encryption.rds".
old_encrypted_data <- readRDS("Data/encryption.rds")
tt <- unserialize(data_decrypt(old_encrypted_data, key))
